<!DOCTYPE html>
<html>
<head>
    <title>Upload Images</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        .navbar {
            background-color: #f8f9fa;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        } 
        .navbar-brand {
            font-size: 24px;
            font-weight: 500;
            color: #333;
        }
        .upload-container {
            max-width: 800px;
            margin: 30px auto;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            border-radius: 5px;
        }
        .preview-container {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin: 15px 0;
        }
        .preview-image {
            width: 150px;
            height: 150px;
            object-fit: cover;
            border-radius: 4px;
        }
        .drop-zone {
            border: 2px dashed #ccc;
            border-radius: 4px;
            padding: 20px;
            text-align: center;
            background: #f8f9fa;
            cursor: pointer;
            transition: border .3s ease-in-out;
        }
        .drop-zone.dragover {
            border-color: #007bff;
            background: #e7f1ff;
        }
        .drop-zone p {
            margin: 0;
            font-size: 16px;
            color: #666;
        }
        .drop-zone .icon {
            font-size: 32px;
            color: #007bff;
            margin-bottom: 10px;
        }

    </style>
</head>
<body>
    <nav class="navbar navbar-default">
        <div class="container">
            <div class="navbar-header">
                <a class="navbar-brand" href="/">Image Upload</a>
            </div>
            <div class="nav navbar-nav navbar-right">
                <a href="/recent" class="btn btn-default navbar-btn"><i class="fas fa-clock"></i> Recent Uploads</a>
            </div>
        </div>
    </nav>
    <div class="container">
        <div class="upload-container">
            
            <form method="post" enctype="multipart/form-data" action="/upload" id="uploadForm">
                <div class="form-group">
                    <label for="title">Title</label>
                    <input type="text" name="title" id="title" class="form-control" placeholder="Enter title" required>
                </div>
                
                <div class="form-group">
                    <div class="drop-zone" id="dropZone">
                        <i class="fas fa-cloud-upload-alt icon"></i>
                        <p>Drag and drop images here or click to select files</p>
                        <input type="file" name="images" id="fileInput" multiple accept="image/*" style="display: none;">
                    </div>
                    <div class="preview-container" id="previewContainer"></div>
                </div>
                
                <div class="form-group text-center">
                    <button type="submit" class="btn btn-primary btn-lg">Upload Images</button>
                </div>
            </form>
        </div>


    </div>

    <script>
        const dropZone = document.getElementById('dropZone');
        const fileInput = document.getElementById('fileInput');
        const previewContainer = document.getElementById('previewContainer');

        // Handle drag and drop events
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropZone.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        ['dragenter', 'dragover'].forEach(eventName => {
            dropZone.addEventListener(eventName, highlight, false);
        });

        ['dragleave', 'drop'].forEach(eventName => {
            dropZone.addEventListener(eventName, unhighlight, false);
        });

        function highlight(e) {
            dropZone.classList.add('dragover');
        }

        function unhighlight(e) {
            dropZone.classList.remove('dragover');
        }

        dropZone.addEventListener('drop', handleDrop, false);

        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;
            handleFiles(files);
        }

        dropZone.addEventListener('click', () => {
            fileInput.click();
        });

        fileInput.addEventListener('change', function() {
            handleFiles(this.files);
        });

        function handleFiles(files) {
            previewContainer.innerHTML = '';
            [...files].forEach(file => {
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const img = document.createElement('img');
                        img.src = e.target.result;
                        img.classList.add('preview-image');
                        previewContainer.appendChild(img);
                    };
                    reader.readAsDataURL(file);
                }
            });
        }
    </script>
</body>
</html>